{"ast":null,"code":"// Get Category From Product json\nexport const CategoryList = products => {\n  var uniqueCategorys = [];\n  products.map(product => {\n    if (product.tags.length > 0 && product.tags) {\n      product.tags.map(categorys => {\n        if (categorys && categorys.length > 0) {\n          if (uniqueCategorys.indexOf(categorys) === -1) {\n            uniqueCategorys.push(categorys);\n          }\n        }\n      });\n    }\n  });\n  return uniqueCategorys;\n}; // Get Size From Product json\n\nexport const GetsizeList = products => {\n  var uniqueSizes = [];\n  products.map(product => {\n    if (product.size.length > 0 && product.size) {\n      product.size.map(sizes => {\n        if (sizes && sizes.length > 0) {\n          if (uniqueSizes.indexOf(sizes) === -1) {\n            uniqueSizes.push(sizes);\n          }\n        }\n      });\n    }\n  });\n  return uniqueSizes;\n}; // All Filter Used And Get Final Response\n\nexport const FilterProduct = (data, {\n  category,\n  size,\n  color,\n  value\n}) => {\n  let sizes = size;\n  return data.products.filter(product => {\n    let categoryMatchValue;\n    if (product.tags) categoryMatchValue = product.tags.some(tag => category.includes(tag));else categoryMatchValue = true;\n    let sizeMatchValue;\n    if (product.size) sizeMatchValue = product.size.some(size => sizes.includes(size));else sizeMatchValue = true;\n    let colorMatchValue;\n\n    if (color && product.colors) {\n      colorMatchValue = product.colors.some(colors => color.includes(colors));\n    } else {\n      colorMatchValue = false;\n    }\n\n    const startPriceMatchValue = typeof value.min !== 'number' || value.min <= product.salePrice;\n    const endPriceMatchValue = typeof value.max !== 'number' || product.salePrice <= value.max;\n\n    if (category.length > 0 && color.length > 0 && size.length > 0) {\n      return categoryMatchValue && colorMatchValue && sizeMatchValue && startPriceMatchValue && endPriceMatchValue;\n    }\n\n    if (category.length > 0 && color.length > 0 && size.length > 0) {\n      return categoryMatchValue && colorMatchValue && sizeMatchValue && startPriceMatchValue && endPriceMatchValue;\n    }\n\n    if (category.length > 0 && size.length > 0) {\n      return categoryMatchValue && colorMatchValue && startPriceMatchValue && endPriceMatchValue;\n    }\n\n    if (category.length > 0 && color.length > 0) {\n      return categoryMatchValue && colorMatchValue && startPriceMatchValue && endPriceMatchValue;\n    }\n\n    if (color.length > 0 && size.length > 0) {\n      return colorMatchValue && sizeMatchValue && startPriceMatchValue && endPriceMatchValue;\n    }\n\n    if (category.length > 0 && color.length > 0) {\n      return categoryMatchValue && colorMatchValue && startPriceMatchValue && endPriceMatchValue;\n    }\n\n    if (category.length > 0 && size.length > 0) {\n      return categoryMatchValue && sizeMatchValue && startPriceMatchValue && endPriceMatchValue;\n    }\n\n    if (category.length > 0) {\n      return categoryMatchValue && startPriceMatchValue && endPriceMatchValue;\n    }\n\n    if (color.length > 0 && size.length > 0) {\n      return colorMatchValue && sizeMatchValue && startPriceMatchValue && endPriceMatchValue;\n    }\n\n    if (color.length > 0) {\n      return colorMatchValue && startPriceMatchValue && endPriceMatchValue;\n    }\n\n    if (size.length > 0) {\n      return sizeMatchValue && startPriceMatchValue && endPriceMatchValue;\n    }\n\n    if (color.length > 0) {\n      return colorMatchValue && startPriceMatchValue && endPriceMatchValue;\n    }\n\n    if (category.length > 0) {\n      return categoryMatchValue;\n    }\n\n    if (size.length > 0) {\n      return sizeMatchValue && startPriceMatchValue && endPriceMatchValue;\n    } else {\n      return startPriceMatchValue && endPriceMatchValue;\n    }\n  });\n}; // Get Color From Product json\n\nexport const GetColorsList = products => {\n  var uniqueColors = [];\n  products.map(product => {\n    if (product.colors.length > 0 && product.colors) {\n      product.colors.map(color => {\n        if (color && color.length > 0) {\n          if (uniqueColors.indexOf(color) === -1) {\n            uniqueColors.push(color);\n          }\n        }\n      });\n    }\n  });\n  return uniqueColors;\n}; // Get Min & Max Data in Json\n\nexport const GetMinMaxPrice = products => {\n  let minimum = 0,\n      maximum = 1000;\n  products.map((product, index) => {\n    let v = product.salePrice;\n\n    if (v < minimum) {\n      minimum = v;\n    } else {\n      minimum = minimum;\n    }\n\n    if (v > maximum) {\n      maximum = v;\n    } else {\n      maximum = maximum;\n    }\n  });\n  return {\n    'min': minimum,\n    'max': maximum\n  };\n};","map":{"version":3,"sources":["/Users/edwinasteals/Desktop/trichome/client/src/services/index.js"],"names":["CategoryList","products","uniqueCategorys","map","product","tags","length","categorys","indexOf","push","GetsizeList","uniqueSizes","size","sizes","FilterProduct","data","category","color","value","filter","categoryMatchValue","some","tag","includes","sizeMatchValue","colorMatchValue","colors","startPriceMatchValue","min","salePrice","endPriceMatchValue","max","GetColorsList","uniqueColors","GetMinMaxPrice","minimum","maximum","index","v"],"mappings":"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","sourcesContent":["// Get Category From Product json\r\nexport const CategoryList = (products) => {\r\n    var uniqueCategorys = [];\r\n    products.map((product) => {\r\n        if (product.tags.length > 0 && product.tags) {\r\n            product.tags.map((categorys) => {\r\n                if(categorys && categorys.length > 0)\r\n                {\r\n                    if (uniqueCategorys.indexOf(categorys) === -1) {\r\n                        uniqueCategorys.push(categorys);\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    })\r\n    return uniqueCategorys;\r\n}\r\n\r\n// Get Size From Product json\r\nexport const GetsizeList = (products) => {\r\n    var uniqueSizes = [];\r\n    products.map((product) => {\r\n        if (product.size.length > 0 && product.size) {\r\n            product.size.map((sizes) => {\r\n                if(sizes && sizes.length > 0)\r\n                {\r\n                    if (uniqueSizes.indexOf(sizes) === -1) {\r\n                        uniqueSizes.push(sizes);\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    })\r\n    return uniqueSizes;\r\n}\r\n\r\n\r\n// All Filter Used And Get Final Response\r\nexport const FilterProduct = (data, { category, size, color,value}) => {\r\n    \r\n    let sizes = size;  \r\n\r\n    return data.products.filter(product => {\r\n        \r\n        let categoryMatchValue;\r\n        if(product.tags)\r\n            categoryMatchValue = product.tags.some(tag => category.includes(tag))\r\n        else\r\n            categoryMatchValue = true;  \r\n   \r\n\r\n        let sizeMatchValue;\r\n        if(product.size)\r\n             sizeMatchValue = product.size.some(size => sizes.includes(size))\r\n        else\r\n             sizeMatchValue = true;\r\n\r\n        let colorMatchValue;\r\n        if(color && product.colors) {\r\n            colorMatchValue = product.colors.some(colors => color.includes(colors))\r\n        }else{\r\n            colorMatchValue = false;\r\n        }\r\n        \r\n        const startPriceMatchValue = typeof value.min !== 'number' || value.min <= product.salePrice;\r\n        const endPriceMatchValue = typeof value.max !== 'number' || product.salePrice <= value.max;\r\n\r\n        if(category.length > 0 && color.length > 0 && size.length > 0  )\r\n        {\r\n            return  categoryMatchValue && colorMatchValue  && sizeMatchValue  && startPriceMatchValue && endPriceMatchValue ;\r\n        }\r\n        if(category.length > 0 && color.length > 0 && size.length > 0   )\r\n        {\r\n            return  categoryMatchValue && colorMatchValue  && sizeMatchValue && startPriceMatchValue && endPriceMatchValue  ;\r\n        }\r\n        if(category.length > 0 && size.length > 0   )\r\n        {\r\n            return  categoryMatchValue && colorMatchValue   && startPriceMatchValue && endPriceMatchValue ;\r\n        }\r\n        if(category.length > 0 && color.length > 0  )\r\n        {\r\n            return  categoryMatchValue && colorMatchValue  && startPriceMatchValue && endPriceMatchValue ;\r\n        }\r\n        if(color.length > 0 && size.length > 0  )\r\n        {\r\n            return  colorMatchValue  && sizeMatchValue   && startPriceMatchValue && endPriceMatchValue  ;\r\n        }\r\n        if(category.length > 0 && color.length > 0 )\r\n        {\r\n            return  categoryMatchValue && colorMatchValue   && startPriceMatchValue && endPriceMatchValue ;\r\n        }\r\n        if(category.length > 0 && size.length > 0)\r\n        {\r\n            return  categoryMatchValue && sizeMatchValue   && startPriceMatchValue && endPriceMatchValue  ;\r\n        }\r\n        if(category.length > 0 )\r\n        {\r\n            return  categoryMatchValue    && startPriceMatchValue && endPriceMatchValue  ;\r\n        }\r\n        if(color.length > 0 && size.length > 0)\r\n        {\r\n            return  colorMatchValue && sizeMatchValue   && startPriceMatchValue && endPriceMatchValue  ;\r\n        }\r\n        if(color.length > 0 )\r\n        {\r\n            return  colorMatchValue    && startPriceMatchValue && endPriceMatchValue  ;\r\n        }\r\n        if(size.length > 0 )\r\n        {\r\n            return  sizeMatchValue    && startPriceMatchValue && endPriceMatchValue  ;\r\n        }\r\n        if(color.length > 0)\r\n        {\r\n            return  colorMatchValue   && startPriceMatchValue && endPriceMatchValue  ;\r\n        }\r\n        if(category.length > 0)\r\n        {\r\n            return  categoryMatchValue ;\r\n        }\r\n        if(size.length > 0)\r\n        {\r\n            return  sizeMatchValue   && startPriceMatchValue && endPriceMatchValue  ;\r\n        }\r\n        else\r\n        {\r\n        return startPriceMatchValue && endPriceMatchValue  ;\r\n       }\r\n\r\n    });\r\n}\r\n\r\n\r\n// Get Color From Product json\r\nexport const GetColorsList = (products) => {\r\n    var uniqueColors = [];\r\n    products.map((product) => {\r\n\r\n        if(product.colors.length > 0 && product.colors) {\r\n            product.colors.map((color) => {\r\n                if(color && color.length > 0)\r\n                {\r\n                    if (uniqueColors.indexOf(color) === -1) {\r\n                        uniqueColors.push(color);\r\n                    }\r\n                }\r\n\r\n            })\r\n        }\r\n    })\r\n    return uniqueColors;\r\n}\r\n\r\n// Get Min & Max Data in Json\r\nexport const GetMinMaxPrice = (products) => {\r\n    let minimum = 0, maximum = 1000;\r\n    products.map((product, index) => {\r\n        let v = product.salePrice;\r\n        if(v < minimum)\r\n        {\r\n            minimum=v;\r\n        }\r\n        else\r\n        {\r\n            minimum=minimum;\r\n        }\r\n        if(v > maximum)\r\n        {\r\n            maximum=v;\r\n        }\r\n        else\r\n        {\r\n            maximum=maximum;\r\n        }\r\n    })\r\n    return {'min':minimum, 'max':maximum};\r\n}"]},"metadata":{},"sourceType":"module"}