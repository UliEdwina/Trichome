{"ast":null,"code":"var _jsxFileName = \"/Users/edwinasteals/Desktop/trichome/client/src/widgets/shop/sidebar.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Getcategory, Getprice, Getcolor, Getsize } from '../../actions/saidfilter.js';\nimport { CategoryList, GetMinMaxPrice, GetColorsList, GetsizeList } from '../../services/index';\nimport { Slider } from 'antd';\nimport { Scrollbars } from 'react-custom-scrollbars';\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.PriceFilter = values => {\n      var maximumval = this.props.prices.max / 5;\n      var value = {\n        min: values['0'],\n        max: values['1']\n      };\n\n      if (value.min == 0) {\n        value.min = 0;\n      } else if (value.min > 0 && value.min <= 20) {\n        value.min = parseInt(this.fncl(value.min * (maximumval * 1) / 20));\n      } else if (value.min > 20 && value.min <= 40) {\n        value.min = parseInt(this.fncl(value.min * (maximumval * 2) / 40));\n      } else if (value.min > 40 && value.min <= 60) {\n        value.min = parseInt(this.fncl(value.min * (maximumval * 3) / 60));\n      } else if (value.min > 60 && value.min <= 80) {\n        value.min = parseInt(this.fncl(value.min * (maximumval * 4) / 80));\n      } else if (value.min > 80 && value.min <= 100) {\n        value.min = parseInt(this.fncl(value.min * (maximumval * 5) / 100));\n      } else {\n        value.min = false;\n      }\n\n      if (value.max === 0) {\n        value.max = 0;\n      } else if (value.max > 0 && value.max <= 20) {\n        value.max = parseInt(this.fncl(value.max * (maximumval * 1) / 20));\n      } else if (value.max > 20 && value.max <= 40) {\n        value.max = parseInt(this.fncl(value.max * (maximumval * 2) / 40));\n      } else if (value.max > 40 && value.max <= 60) {\n        value.max = parseInt(this.fncl(value.max * (maximumval * 3) / 60));\n      } else if (value.max > 60 && value.max <= 80) {\n        value.max = parseInt(this.fncl(value.max * (maximumval * 4) / 80));\n      } else if (value.max > 80 && value.max <= 100) {\n        value.max = parseInt(this.fncl(value.max * (maximumval * 5) / 100));\n      } else {\n        value.max = false;\n      }\n\n      this.setState({\n        priceplace: values\n      });\n      this.props.Getprice({\n        value\n      });\n    };\n\n    this.fncl = value => {\n      return Number.parseFloat(value).toFixed(0);\n    };\n\n    this.ValueinDecimal = labelValue => {\n      return labelValue.toLocaleString(\"en\", {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0\n      });\n    };\n\n    this.PriceFormatter = value => {\n      var maximumval = this.props.prices.max / 5;\n\n      if (value === 0) {\n        value = \"0\";\n      } else if (value > 0 && value <= 20) {\n        value = value * (maximumval * 1) / 20;\n      } else if (value > 20 && value <= 40) {\n        value = value * (maximumval * 2) / 40;\n      } else if (value > 40 && value <= 60) {\n        value = value * (maximumval * 3) / 60;\n      } else if (value > 60 && value <= 80) {\n        value = value * (maximumval * 4) / 80;\n      } else if (value > 80 && value <= 100) {\n        value = value * (maximumval * 5) / 100;\n      }\n\n      return this.ValueinDecimal(value);\n    };\n\n    this.ColorFilter = (event, colors) => {\n      var index = colors.indexOf(event.target.value);\n\n      if (event.target.checked) {\n        colors.push(event.target.value);\n      } else {\n        colors.splice(index, 1);\n      }\n\n      this.props.Getcolor(colors);\n    };\n\n    this.state = {\n      priceplace: [this.props.prices.min, this.props.prices.max]\n    };\n  }\n\n  CategoryFilter(event, categorys) {\n    var index = categorys.indexOf(event.target.value);\n\n    if (event.target.checked) {\n      categorys.push(event.target.value);\n    } else {\n      categorys.splice(index, 1);\n    }\n\n    this.props.Getcategory(categorys);\n  }\n\n  PriceFilterClear(pricesval) {\n    var value = {\n      min: pricesval.min,\n      max: pricesval.max\n    };\n    this.setState({\n      priceplace: [this.props.prices.min, this.props.prices.max]\n    });\n    this.props.Getprice({\n      value\n    });\n  }\n\n  onClickSizeFilter(event, sizes) {\n    var index = sizes.indexOf(event.target.value);\n\n    if (event.target.checked) {\n      sizes.push(event.target.value);\n    } else {\n      sizes.splice(index, 1);\n    }\n\n    this.props.Getsize(sizes);\n  }\n\n  render() {\n    const categoryFilterValues = this.props.filters.category;\n    const colorsFilterValues = this.props.filters.color;\n    const sizeFilterValues = this.props.filters.size;\n    var max = this.props.prices.max;\n    var maxdivide = max / 5;\n    const marks = {\n      0: 0,\n      20: (maxdivide * 1).toLocaleString(navigator.language, {\n        minimumFractionDigits: 0\n      }),\n      40: (maxdivide * 2).toLocaleString(navigator.language, {\n        minimumFractionDigits: 0\n      }),\n      60: (maxdivide * 3).toLocaleString(navigator.language, {\n        minimumFractionDigits: 0\n      }),\n      80: (maxdivide * 4).toLocaleString(navigator.language, {\n        minimumFractionDigits: 0\n      }),\n      100: max.toLocaleString(navigator.language, {\n        minimumFractionDigits: 0\n      })\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-3 col-md-12 order-lg-1 sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }, \"Categories\"), /*#__PURE__*/React.createElement(Scrollbars, {\n      style: {\n        height: 300\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-unstyled list-group list-group-flush mb-5 categories-widget\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }, this.props.categorys.map((cate, index) => /*#__PURE__*/React.createElement(\"li\", {\n      className: \"mb-4\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      onClick: e => this.CategoryFilter(e, categoryFilterValues),\n      value: cate,\n      defaultChecked: categoryFilterValues.includes(cate) ? true : false,\n      className: \"form-check-input\",\n      id: cate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"list-group-item list-group-item-action border-0 p-0\",\n      htmlFor: cate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 33\n      }\n    }, cate)))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }, \"Price\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"border-0 p-0 bg-transparent btn-link\",\n      onClick: () => this.PriceFilterClear(this.props.prices),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }\n    }, \"clear\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"price_slider_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Slider, {\n      range: true,\n      step: 1,\n      min: 0,\n      max: 100,\n      tipFormatter: this.PriceFormatter,\n      value: this.state.priceplace,\n      onChange: this.PriceFilter,\n      marks: marks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-8 filter-color\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }\n    }, \"Color\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }\n    }, this.props.colors.map((col, index) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check pl-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        onClick: e => this.ColorFilter(e, colorsFilterValues),\n        value: col,\n        defaultChecked: colorsFilterValues.includes(col) ? true : false,\n        className: \"form-check-input\",\n        id: col,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 40\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-check-label\",\n        style: {\n          background: col\n        },\n        htmlFor: col,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 40\n        }\n      })));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }\n    }, \"Size\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"size-choose\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 25\n      }\n    }, this.props.sizes.map((size, index) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        name: \"sc\",\n        type: \"checkbox\",\n        onClick: e => this.onClickSizeFilter(e, sizeFilterValues),\n        defaultChecked: sizeFilterValues.includes(size) ? true : false,\n        value: size,\n        id: size,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: size,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 45\n        }\n      }, size));\n    })))));\n  }\n\n}\n\nconst mapDispatchToProps = state => ({\n  categorys: CategoryList(state.data.products),\n  prices: GetMinMaxPrice(state.data.products),\n  colors: GetColorsList(state.data.products),\n  sizes: GetsizeList(state.data.products),\n  filters: state.filters\n});\n\nexport default connect(mapDispatchToProps, {\n  Getcategory,\n  Getprice,\n  Getcolor,\n  Getsize\n})(Sidebar);","map":{"version":3,"sources":["/Users/edwinasteals/Desktop/trichome/client/src/widgets/shop/sidebar.js"],"names":["React","Component","connect","Getcategory","Getprice","Getcolor","Getsize","CategoryList","GetMinMaxPrice","GetColorsList","GetsizeList","Slider","Scrollbars","Sidebar","constructor","props","PriceFilter","values","maximumval","prices","max","value","min","parseInt","fncl","setState","priceplace","Number","parseFloat","toFixed","ValueinDecimal","labelValue","toLocaleString","minimumFractionDigits","maximumFractionDigits","PriceFormatter","ColorFilter","event","colors","index","indexOf","target","checked","push","splice","state","CategoryFilter","categorys","PriceFilterClear","pricesval","onClickSizeFilter","sizes","render","categoryFilterValues","filters","category","colorsFilterValues","color","sizeFilterValues","size","maxdivide","marks","navigator","language","height","map","cate","e","includes","col","background","mapDispatchToProps","data","products"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Getcategory, Getprice, Getcolor,Getsize } from '../../actions/saidfilter.js';\r\nimport { CategoryList, GetMinMaxPrice, GetColorsList,GetsizeList } from '../../services/index';\r\nimport { Slider } from 'antd';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nclass Sidebar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            priceplace: [this.props.prices.min, this.props.prices.max],\r\n        }\r\n    }\r\n    CategoryFilter(event, categorys) {\r\n\r\n        var index = categorys.indexOf(event.target.value);\r\n        if (event.target.checked) {\r\n            categorys.push(event.target.value);\r\n        }\r\n        else {\r\n            categorys.splice(index, 1);\r\n        }\r\n        this.props.Getcategory(categorys);\r\n    }\r\n    PriceFilter = values => {\r\n        var maximumval = this.props.prices.max / 5;\r\n\r\n        var value = {\r\n            min: values['0'],\r\n            max: values['1']\r\n        }\r\n        if (value.min == 0) {\r\n            value.min = 0;\r\n        }\r\n        else if (value.min > 0 && value.min <= 20) {\r\n            value.min = parseInt(this.fncl(value.min * (maximumval * 1) / 20));\r\n        }\r\n        else if (value.min > 20 && value.min <= 40) {\r\n            value.min = parseInt(this.fncl(value.min * (maximumval * 2) / 40));\r\n        }\r\n        else if (value.min > 40 && value.min <= 60) {\r\n            value.min = parseInt(this.fncl(value.min * (maximumval * 3) / 60));\r\n        }\r\n        else if (value.min > 60 && value.min <= 80) {\r\n            value.min = parseInt(this.fncl(value.min * (maximumval * 4) / 80));\r\n        }\r\n        else if (value.min > 80 && value.min <= 100) {\r\n            value.min = parseInt(this.fncl(value.min * (maximumval * 5) / 100));\r\n        }\r\n        else {\r\n            value.min = false;\r\n        }\r\n\r\n        if (value.max === 0) {\r\n            value.max = 0;\r\n        }\r\n        else if (value.max > 0 && value.max <= 20) {\r\n            value.max = parseInt(this.fncl(value.max * (maximumval * 1) / 20));\r\n        }\r\n        else if (value.max > 20 && value.max <= 40) {\r\n            value.max = parseInt(this.fncl(value.max * (maximumval * 2) / 40));\r\n        }\r\n        else if (value.max > 40 && value.max <= 60) {\r\n            value.max = parseInt(this.fncl(value.max * (maximumval * 3) / 60));\r\n        }\r\n        else if (value.max > 60 && value.max <= 80) {\r\n            value.max = parseInt(this.fncl(value.max * (maximumval * 4) / 80));\r\n        }\r\n        else if (value.max > 80 && value.max <= 100) {\r\n            value.max = parseInt(this.fncl(value.max * (maximumval * 5) / 100));\r\n        }\r\n        else {\r\n            value.max = false;\r\n        }\r\n        this.setState({\r\n            priceplace: values\r\n        });\r\n        this.props.Getprice({ value })\r\n    }\r\n    fncl = (value) => {\r\n        return Number.parseFloat(value).toFixed(0);\r\n    }\r\n    ValueinDecimal = (labelValue) => {\r\n        return labelValue.toLocaleString(\"en\", {\r\n            minimumFractionDigits: 0,\r\n            maximumFractionDigits: 0,\r\n        })\r\n    }\r\n\r\n    PriceFormatter = value => {\r\n        var maximumval = this.props.prices.max / 5;\r\n        if (value === 0) {\r\n            value = \"0\";\r\n        }\r\n        else if (value > 0 && value <= 20) {\r\n            value = value * (maximumval * 1) / 20;\r\n        }\r\n        else if (value > 20 && value <= 40) {\r\n            value = value * (maximumval * 2) / 40;\r\n        }\r\n        else if (value > 40 && value <= 60) {\r\n            value = value * (maximumval * 3) / 60;\r\n        }\r\n        else if (value > 60 && value <= 80) {\r\n            value = value * (maximumval * 4) / 80;\r\n        }\r\n        else if (value > 80 && value <= 100) {\r\n            value = value * (maximumval * 5) / 100;\r\n        }\r\n        return this.ValueinDecimal(value);\r\n    }\r\n\r\n    PriceFilterClear(pricesval) {\r\n        var value = {\r\n            min: pricesval.min,\r\n            max: pricesval.max\r\n        }\r\n        this.setState({\r\n            priceplace: [this.props.prices.min, this.props.prices.max]\r\n        })\r\n        this.props.Getprice({ value })\r\n    }\r\n    ColorFilter = (event, colors) => {\r\n        \r\n        var index = colors.indexOf(event.target.value);\r\n        if (event.target.checked) {\r\n            colors.push(event.target.value);\r\n        }\r\n        else {\r\n            colors.splice(index, 1);\r\n        }\r\n       \r\n        this.props.Getcolor(colors)\r\n    }\r\n    onClickSizeFilter(event, sizes) {\r\n        var index = sizes.indexOf(event.target.value);\r\n        if (event.target.checked) {\r\n            sizes.push(event.target.value);\r\n        }\r\n        else {\r\n            sizes.splice(index, 1);\r\n        }\r\n        this.props.Getsize(sizes);\r\n    }\r\n    render() {\r\n        const categoryFilterValues = this.props.filters.category;\r\n        const colorsFilterValues = this.props.filters.color;\r\n        const sizeFilterValues = this.props.filters.size;\r\n\r\n        var max = this.props.prices.max;\r\n        var maxdivide = max / 5;\r\n        const marks = {\r\n            0: 0,\r\n            20: ((maxdivide * 1).toLocaleString(navigator.language, { minimumFractionDigits: 0 })),\r\n            40: ((maxdivide * 2).toLocaleString(navigator.language, { minimumFractionDigits: 0 })),\r\n            60: ((maxdivide * 3).toLocaleString(navigator.language, { minimumFractionDigits: 0 })),\r\n            80: ((maxdivide * 4).toLocaleString(navigator.language, { minimumFractionDigits: 0 })),\r\n            100: max.toLocaleString(navigator.language, { minimumFractionDigits: 0 })\r\n        };\r\n        return (\r\n            <div className=\"col-lg-3 col-md-12 order-lg-1 sidebar\">\r\n                <div>\r\n                    <h4 className=\"mb-5\">Categories</h4>\r\n                   \r\n                    <Scrollbars style={{  height: 300 }}>\r\n                    <ul className=\"list-unstyled list-group list-group-flush mb-5 categories-widget\">\r\n                        {this.props.categorys.map((cate, index) => (\r\n                            <li className=\"mb-4\" key={index}>\r\n                                <input type=\"checkbox\" onClick={(e) => this.CategoryFilter(e, categoryFilterValues)} value={cate} defaultChecked={categoryFilterValues.includes(cate) ? true : false} className=\"form-check-input\" id={cate} />\r\n                                <label className=\"list-group-item list-group-item-action border-0 p-0\" htmlFor={cate}>\r\n                                    {cate}\r\n                                </label>\r\n                            </li>\r\n                        ))}\r\n                         </ul>\r\n                    </Scrollbars>\r\n                   \r\n                </div>\r\n                <div className=\"mt-8\">\r\n                    <h4 className=\"mb-5\">Price</h4>\r\n                    <button className=\"border-0 p-0 bg-transparent btn-link\" onClick={() => this.PriceFilterClear(this.props.prices)}>clear</button>\r\n                    <div className=\"price_slider_wrapper\">\r\n                        <Slider\r\n                            range\r\n                            step={1}\r\n                            min={0}\r\n                            max={100}\r\n                            tipFormatter={this.PriceFormatter}\r\n                            value={this.state.priceplace}\r\n                            onChange={this.PriceFilter}\r\n                            marks={marks}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-8 filter-color\">\r\n                    <h4>Color</h4>\r\n                    <ul className=\"list-inline\">\r\n                        {this.props.colors.map((col, index) => {\r\n                             return (\r\n                                <li key={index}>\r\n                                    <div className=\"form-check pl-0\">\r\n                                       <input type=\"checkbox\" onClick={(e) => this.ColorFilter(e, colorsFilterValues)} value={col} defaultChecked={colorsFilterValues.includes(col) ? true : false} className=\"form-check-input\" id={col} />\r\n                                       <label className=\"form-check-label\" style={{ background: col }} htmlFor={col}/>\r\n                                   </div>\r\n                                 </li>\r\n                            )\r\n\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"mt-8\">\r\n                    <h5 className=\"mb-5\">Size</h5>\r\n                    <div className=\"size-choose\">\r\n                        <ul className=\"list-inline\">\r\n                            {this.props.sizes.map((size, index) => {\r\n                               return( \r\n                                        <li key={index}>\r\n                                            <input name=\"sc\" type=\"checkbox\"  onClick={(e) => this.onClickSizeFilter(e, sizeFilterValues)} defaultChecked={sizeFilterValues.includes(size) ? true : false} value={size} id={size} />\r\n                                            <label  htmlFor={size}>{size}</label>\r\n                                        </li>\r\n                                    )\r\n                            })}\r\n                           \r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = state => ({\r\n    categorys: CategoryList(state.data.products),\r\n    prices: GetMinMaxPrice(state.data.products),\r\n    colors: GetColorsList(state.data.products),\r\n    sizes: GetsizeList(state.data.products),\r\n    filters: state.filters\r\n})\r\nexport default connect(\r\n    mapDispatchToProps,\r\n    { Getcategory, Getprice, Getcolor,Getsize }\r\n)(Sidebar);"]},"metadata":{},"sourceType":"module"}